name: Build
on: push

env:

  APP_NAME: "com.test.game.egypt-release"
  
  AndroidKeystorePass: "qwerty"
  AndroidKeyaliasPass: "qwerty"
  AndroidKeyaliasName: "qwerty"
  
  ChatID_APK: "5419377045"
  ChatID_AAB: "5419377045"
  ChatID_LOG: "5419377045"
  BotToken: "5541471253:AAFGq-cwlYERC9nSYc68_94bWOH0Fx1KkVU"
  BotTokenLog: "5541471253:AAFGq-cwlYERC9nSYc68_94bWOH0Fx1KkVU"

jobs:
  build-apk:
    runs-on: ubuntu-latest
    steps:
      - name: Free Disk Space
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          if [ "$(docker image ls -q)" != "" ]; then
            docker rmi $(docker image ls -aq)
          fi
          df -h

      - name: Checkout
        uses: actions/checkout@v2.4.2

      - name: Encode keystore to base64
        id: encode_keystore
        run: echo "::set-output name=encoding::$(base64 -w 0 ${{ github.workspace }}/user.keystore)"

      - name: Build APK
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          buildName: ${{ env.APP_NAME }}
          androidExportType: 'androidPackage'
          androidKeystoreName: user.keystore
          androidKeystoreBase64: ${{ steps.encode_keystore.outputs.encoding }}
          androidKeystorePass: ${{ env.AndroidKeystorePass }}
          androidKeyaliasName: ${{ env.AndroidKeyaliasName }}
          androidKeyaliasPass: ${{ env.AndroidKeyaliasPass }}
          targetPlatform: Android

      - name: Send APK to Telegram
        run: |
          curl -X POST "https://api.telegram.org/bot${{ env.BotToken }}/sendDocument" \
          -F "chat_id=${{ env.ChatID_APK }}" \
          -F "document=@${{ github.workspace }}/build/Android/${{ env.APP_NAME }}.apk"

  build-aab:
    runs-on: ubuntu-latest
    steps:
      - name: Free Disk Space
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          if [ "$(docker image ls -q)" != "" ]; then
            docker rmi $(docker image ls -aq)
          fi
          df -h

      - name: Checkout
        uses: actions/checkout@v2.4.2

      - name: Encode keystore to base64
        id: encode_keystore
        run: echo "::set-output name=encoding::$(base64 -w 0 ${{ github.workspace }}/user.keystore)"

      - name: Build AAB
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          buildName: ${{ env.APP_NAME }}
          androidExportType: 'androidAppBundle'
          androidVersionCode: 2
          androidKeystoreName: user.keystore
          androidKeystoreBase64: ${{ steps.encode_keystore.outputs.encoding }}
          androidKeystorePass: ${{ env.AndroidKeystorePass }}
          androidKeyaliasName: ${{ env.AndroidKeyaliasName }}
          androidKeyaliasPass: ${{ env.AndroidKeyaliasPass }}
          targetPlatform: Android

      - name: Send AAB to Telegram
        run: |
          curl -X POST "https://api.telegram.org/bot${{ env.BotToken }}/sendDocument" \
          -F "chat_id=${{ env.ChatID_AAB }}" \
          -F "document=@${{ github.workspace }}/build/Android/${{ env.APP_NAME }}.aab"

  notify:
    runs-on: ubuntu-latest
    needs: [build-apk, build-aab]
    if: always()
    steps:
      - name: Set Build Status
        run: |
          if [ "${{ needs.build-apk.result }}" == "success" ] && [ "${{ needs.build-aab.result }}" == "success" ]; then
            echo "STATUS=✅ Успешно" >> $GITHUB_ENV
          elif [ "${{ needs.build-apk.result }}" == "failure" ] || [ "${{ needs.build-aab.result }}" == "failure" ]; then
            echo "STATUS=❌ Ошибка" >> $GITHUB_ENV
          else
            echo "STATUS=⚠️ Завершено с предупреждениями" >> $GITHUB_ENV
          fi
          
      - name: Send Build Status Notification
        run: |
          curl -X POST "https://api.telegram.org/bot${{ env.BotTokenLog }}/sendMessage" \
          -d "chat_id=${{ env.ChatID_LOG }}" \
          -d "text=*Build Status*: ${{ env.STATUS }} \
               *App Name*: ${{ env.APP_NAME }} \
               *Triggered By*: ${{ github.actor }} \
               *Logs*: [View Logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"